name: Build

# PEARL: In GitHub, the output of msbuild look completely different from what it looks when building locally. For
#        example, the output of "Message" tasks is not shown, even when "Importance" is set to "High".
#        The "-ConsoleLoggerParameters:off" magical incantation corrects this problem.
# PEARL-ON-PEARL: The "-ConsoleLoggerParameters:off" magical incantation does not work when invoking "dotnet build"
#        locally. In this case, the "-TerminalLogger:off" magical incantation is necessary.
#        So, we use -TerminalLogger:off here too, for consistency.

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
# PEARL: The VersionPrefix, VersionSuffix mechanism is retarded!
#        - The version prefix must be exactly three numbers separated by periods. 
#          If you omit the last number, a zero will be automagically supplied for you.
#        - Apparently, the entire version number may contain at most one dash, which is automagically supplied when the
#          version-prefix is concatenated with the version-suffix, so the version suffix itself may not contain a dash. 
#          If it does, you get: "The package manifest contains an invalid Version: '1.0.0-9-1'"
#        - To top it all off, the suffix does not actually change the version of the package; instead, it causes nuget 
#          to treat the version as a pre-release version.  
#          This is a misapplication of abstraction: the "VersionSuffix" is not some general-purpose suffix for the 
#          version, it is a "Pre-release version specifier", which happens to be a suffix.
#          The result of all this is that the whole prefix-suffix mechanism serves a very narrowly scoped purpose and
#          is entirely useless for any other scenario.
  RELEASE_VERSION: 3.${{github.run_number}}.${{github.run_attempt}}
  BUILD_SERVER_BUILD: True

jobs:
  build:

    runs-on: ubuntu-latest
    # runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.200

    - run: echo gitHub.run_number = ${{github.run_number}} gitHub.run_attempt = ${{github.run_attempt}} env.RELEASE_VERSION = ${{env.RELEASE_VERSION}}

    - name: "restore"
      run: dotnet restore    -TerminalLogger:off -check

    - name: "Configuration 'Debug': build"
      run: dotnet build      -TerminalLogger:off -check --configuration Debug --no-restore

    - name: "Configuration 'Debug': test"
      run: dotnet test       -TerminalLogger:off -check --configuration Debug --no-build --verbosity normal

    - name: "Configuration 'Develop': build"
      run: dotnet build      -TerminalLogger:off -check --configuration Develop --no-restore

    - name: "Configuration 'Develop': pack"
      run: dotnet pack       -TerminalLogger:off -check --configuration Develop --no-build --property:PackageVersion=${{env.RELEASE_VERSION}}

    - name: "Configuration 'Develop': push"
      run: dotnet nuget push "${{github.event.repository.name}}/bin/Develop/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_API_KEY}}

    - name: "Configuration 'Release': build"
      run: dotnet build      -TerminalLogger:off -check --configuration Release --no-restore

    - name: "Configuration 'Release': pack"
      run: dotnet pack       -TerminalLogger:off -check --configuration Release --no-build --property:PackageVersion=${{env.RELEASE_VERSION}}

    - name: "Configuration 'Release': push"
      run: dotnet nuget push "${{github.event.repository.name}}/bin/Release/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_API_KEY}}
